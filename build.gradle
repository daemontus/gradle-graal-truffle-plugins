plugins {
    id 'java-gradle-plugin'
}

repositories {
    jcenter()
}

dependencies {
    testImplementation 'junit:junit:4.13'
}

gradlePlugin {
    plugins {
        greeting {
            id = 'com.oracle.truffle.gradle.greeting'
            implementationClass = 'com.oracle.truffle.gradle.GradleGraalTrufflePluginsPlugin'
        }
        create("compiler") { plugin ->
            id = 'org.graalvm.plugin.compiler'
            implementationClass = 'com.oracle.truffle.gradle.CompilerPlugin'
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}

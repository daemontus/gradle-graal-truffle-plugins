plugins {
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.12.0'
}

group = 'org.graalvm.plugin'
version = '0.1.0-alpha01'

repositories {
    jcenter()
}

dependencies {
    testImplementation 'junit:junit:4.13'
}

pluginBundle {
    website = 'https://www.graalvm.org/'
    vcsUrl = 'https://github.com/daemontus/gradle-graal-truffle-plugins'
    tags = ['graal', 'compiler', 'native-image', 'truffle', 'language']
}

gradlePlugin {
    plugins {
        create("compiler") { plugin ->
            id = 'org.graalvm.plugin.compiler'
            displayName = 'Graal Compiler Plugin'
            description = 'Automatically enable Graal compiler on Hotspot JVMs and in distributions. Allow truffle languages as project dependencies.'
            implementationClass = 'com.oracle.truffle.gradle.CompilerPlugin'
        }
        /*create("native-image") { plugin ->
            id = 'org.graalvm.plugin.native-image'
            implementationClass = "com.oracle.truffle.gradle.NativeImagePlugin"
        }*/
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}
